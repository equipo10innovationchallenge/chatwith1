{
  "package": {},
  "code": {
    "extract_query_from_question.jinja2": {
      "type": "llm",
      "inputs": {
        "question": {
          "type": [
            "string"
          ]
        },
        "chat_history": {
          "type": [
            "string"
          ]
        }
      },
      "description": "Infer user intent, and use as query to search.",
      "is_builtin": false,
      "name": "extract_query_from_question.jinja2",
      "source": "extract_query_from_question.jinja2",
      "toolId": "extract_query_from_question.jinja2"
    },
    "get_wiki_url.py": {
      "type": "python",
      "inputs": {
        "entity": {
          "type": [
            "string"
          ]
        },
        "count": {
          "type": [
            "int"
          ],
          "default": "2"
        }
      },
      "function": "get_wiki_url",
      "is_builtin": false,
      "name": "get_wiki_url.py",
      "source": "get_wiki_url.py",
      "toolId": "get_wiki_url.py"
    },
    "search_result_from_url.py": {
      "type": "python",
      "inputs": {
        "url_list": {
          "type": [
            "list"
          ]
        },
        "count": {
          "type": [
            "int"
          ],
          "default": "10"
        }
      },
      "function": "search_result_from_url",
      "is_builtin": false,
      "name": "search_result_from_url.py",
      "source": "search_result_from_url.py",
      "toolId": "search_result_from_url.py"
    },
    "process_search_result.py": {
      "type": "python",
      "inputs": {
        "search_result": {
          "type": [
            "object"
          ]
        }
      },
      "function": "process_search_result",
      "is_builtin": false,
      "name": "process_search_result.py",
      "source": "process_search_result.py",
      "toolId": "process_search_result.py"
    },
    "augmented_chat.jinja2": {
      "type": "llm",
      "inputs": {
        "question": {
          "type": [
            "string"
          ]
        },
        "chat_history": {
          "type": [
            "string"
          ]
        },
        "contexts": {
          "type": [
            "string"
          ]
        }
      },
      "description": "Chat given search results ",
      "is_builtin": false,
      "name": "augmented_chat.jinja2",
      "source": "augmented_chat.jinja2",
      "toolId": "augmented_chat.jinja2"
    },
    "process_independent_metrics.py": {
      "type": "python",
      "inputs": {
        "answer": {
          "type": [
            "string"
          ]
        },
        "context": {
          "type": [
            "string"
          ]
        },
        "question": {
          "type": [
            "string"
          ]
        },
        "connection": {
          "type": [
            "ServerlessConnection"
          ]
        }
      },
      "description": "Process independent metrics: groundedness, relevance, and coherence.\n\nArgs:\n    answer: The generated answer\n    context: The context used to generate the answer\n    question: The original question\n    connection: The serverless connection to use\n\nReturns:\n    Dictionary containing the metric scores",
      "source": "process_independent_metrics.py",
      "function": "process_independent_metrics"
    },
    "process_derived_metrics.py": {
      "type": "python",
      "inputs": {
        "answer": {
          "type": [
            "string"
          ]
        },
        "independent_metrics": {
          "type": [
            "object"
          ]
        },
        "connection": {
          "type": [
            "ServerlessConnection"
          ]
        }
      },
      "description": "Process derived metrics: fluency and similarity, using independent metrics as input.\n\nArgs:\n    answer: The generated answer\n    independent_metrics: Results from independent metrics processing\n    connection: The serverless connection to use\n\nReturns:\n    Dictionary containing all metric scores",
      "source": "process_derived_metrics.py",
      "function": "process_derived_metrics"
    }
  }
}